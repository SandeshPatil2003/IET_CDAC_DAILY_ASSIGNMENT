package com.demo.test;

import java.util.Arrays;

public class MainTest {
	
	static int[] ncomp= new int[100];
	 static int[] rcomp= new int[100];
	 static int n;
	 static int r;

	public static void main(String[] args) {
		
		
		int[] arr= {1,2,3,4,5,6,7,8,9,10};
		
		int m=(int)Math.random()*10)+1;
		System.out.println("number is : "+m);
		 for(int i=0;i<100;i++)
		 {
			 
		System.out.println(binarySearchNonRecurssiveR(arr,m));
		
		System.out.println(binarySearchNonRecurssive(arr,m));
		
		 }
		 
		 double totaln=0;
		 
		 for(int i=0;i<100;i++)
		 {
			 totaln+=ncomp[i];
		 }
		totaln=totaln/10;
		
 double totalr=0;
		 
		 for(int i=0;i<100;i++)
		 {
			 totalr+=rcomp[i];
		 }
		totalr=totalr/10;
		
		System.out.println("Random avg: "+totalr);
		System.out.println("Normal avg: "+totaln);
		
		System.out.println("ncomp:"+Arrays.toString(ncomp));
		System.out.println("rcomp:"+Arrays.toString(rcomp));
		
		
		
		


	}
	
	

	public static int binarySearchNonRecurssiveR(int[] arr, int search) {
		int low=0;
		int high=arr.length-1;
		int cnt=0; 
			int mid=(int)(Math.random()*high);
			System.out.println("random choice : "+mid);
		while(low<=high) {
			
			
			cnt++;
			
			if(arr[mid]==search) {
				System.out.println("comparisons are : "+cnt);
				rcomp[r]=cnt;
				r++;
				return mid;
			}

			if(search<arr[mid]) {
				high=mid-1;
			}else {
				low=mid+1;
			}
			mid=(low+high)/2;
		}
		System.out.println("comparisons are : "+cnt);
		return -1;
	}
	
	
	public static int binarySearchNonRecurssive(int[] arr, int search) {
		int low=0;
		int high=arr.length-1;
		int cnt=0;
			int mid=(low+high)/2;
			System.out.println("mid choice : "+mid);
		while(low<=high) {
			
			cnt++;
			if(arr[mid]==search) {
				System.out.println("comparisons are : "+cnt);
				ncomp[n]=cnt;
				n++;
				return mid;
			}

			if(search<arr[mid]) {
				high=mid-1;
			}else {
				low=mid+1;
			}
			mid=(low+high)/2;
		}
		System.out.println("comparisons are : "+cnt);
		return -1;
	}

}
